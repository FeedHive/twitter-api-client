title: Accounts and users
subgroups:
  - title: Create and manage lists
    endpoints:
      - title: GET lists/list
        url: https://developer.twitter.com/en/docs/accounts-and-users/create-manage-lists/api-reference/get-lists-list
        resourceUrl: https://api.twitter.com/1.1/lists/list.json
        description: |
          Returns all lists the authenticating or specified user subscribes to, 
          including their own. The user is specified using the user_id or screen_name parameters. 
          If no user is given, the authenticating user is used.A maximum of 100 results will be 
          returned by this call. Subscribed lists are returned first, followed by owned lists. 
          This means that if a user subscribes to 90 lists and owns 20 lists, this method returns 
          90 subscriptions and 10 owned lists. The reverse method returns owned lists first, 
          so with reverse=true, 20 owned lists and 80 subscriptions would be returned. 
          If your goal is to obtain every list a user owns or subscribes to, 
          use GET lists / ownerships and/or GET lists / subscriptions instead.
        parameters:
          - name: user_id
            description: |
              The ID of the user for whom to return results. Helpful for disambiguating
              when a valid user ID is also a valid screen name. Note: : Specifies the
              ID of the user to get lists from. Helpful for disambiguating when a valid
              user ID is also a valid screen name.
            required: false
            type: number
          - name: screen_name
            description: |
              The screen name of the user for whom to return results. 
              Helpful for disambiguating when a valid screen name is also a user ID.
            required: false
            type: string
          - name: reverse
            description: |
              Set this to true if you would like owned lists to be returned
              first. See description above for information on how this parameter works.
            required: false
            type: boolean
        exampleResponse: |
          [ {list-object} ]
      - title: GET lists/members
        url: https://developer.twitter.com/en/docs/accounts-and-users/create-manage-lists/api-reference/get-lists-members
        resourceUrl: https://api.twitter.com/1.1/lists/members.json
        description: |
          members/*
          Returns the members of the specified list. Private list members will only be shown if the authenticated user owns the specified list.
        parameters:
          - name: list_id
            description: The numerical id of the list.
            required: true
            type: number
          - name: slug
            description: You can identify a list by its slug instead of its numerical
              id. If you decide to do so, note that you'll also have to specify the list
              owner using the owner_id or owner_screen_name parameters.
            required: true
            type: string
          - name: owner_screen_name
            description: The screen name of the user who owns the list being requested
              by a slug.
            required: false
            type: string
          - name: owner_id
            description: The user ID of the user who owns the list being requested by
              a slug.
            required: false
            type: number
          - name: count
            description: Specifies the number of results to return per page (see cursor below).
              The default is 20, with a maximum of 5,000.
            required: false
            type: number
          - name: cursor
            description: |
              Causes the collection of list members to be broken into "pages" of consistent sizes (specified by the count parameter). 
              If no cursor is provided, a value of -1 will be assumed, which is the first "page."
              The response from the API will include a previous_cursor and next_cursor to allow paging back and forth. 
              See Using cursors to navigate collections for more information.
            required: false
            type: number
          - name: include_entities
            description: |
              The entities node will not be included when set to false.
            required: false
            type: boolean
          - name: skip_status
            description: When set to either true, t or 1 statuses will not be included in the returned user objects.
            required: false
            type: boolean
        exampleResponse: |
          {
            "users": [ {user-object} ],
            "next_cursor": 0,
            "next_cursor_str": "0",
            "previous_cursor": 0,
            "previous_cursor_str": "0",
            "total_count": null
          }
      - title: GET lists/members/show
        url: https://developer.twitter.com/en/docs/accounts-and-users/create-manage-lists/api-reference/get-lists-members-show
        resourceUrl: https://api.twitter.com/1.1/lists/members/show.json
        description: |
          Check if the specified user is a member of the specified list.
        parameters:
          - name: list_id
            description: The numerical id of the list.
            required: true
            type: number
          - name: slug
            description: You can identify a list by its slug instead of its numerical
              id. If you decide to do so, note that you'll also have to specify the list
              owner using the owner_id or owner_screen_name parameters.
            required: true
            type: string
          - name: user_id
            description: The ID of the user for whom to return results. Helpful for disambiguating
              when a valid user ID is also a valid screen name.
            required: true
            type: number
          - name: screen_name
            description: The screen name of the user for whom to return results. Helpful
              for disambiguating when a valid screen name is also a user ID.
            required: true
            type: string
          - name: owner_screen_name
            description: The screen name of the user who owns the list being requested
              by a slug.
            required: false
            type: string
          - name: owner_id
            description: The user ID of the user who owns the list being requested by
              a slug.
            required: false
            type: number
          - name: include_entities
            description: |
              When set to either true, t or 1, each tweet will include a node
              called "entities". This node offers a variety of metadata about the tweet
              in a discreet structure, including: user_mentions, urls, and hashtags. While
              entities are opt-in on timelines at present, they will be made a default
              component of output in the future. See Tweet Entities for more details.
            required: false
            type: boolean
          - name: skip_status
            description: When set to either true, t or 1 statuses will not be included in the returned user objects.
            required: false
            type: boolean
        exampleResponse: |
          {user-object}
      - title: GET lists/memberships
        url: https://developer.twitter.com/en/docs/accounts-and-users/create-manage-lists/api-reference/get-lists-memberships
        resourceUrl: https://api.twitter.com/1.1/lists/memberships.json
        description: |
          Returns the lists the specified user has been added to. 
          If user_id or screen_name are not provided, 
          the memberships for the authenticating user are returned.
        parameters:
          - name: user_id
            description: The ID of the user for whom to return results. Helpful for disambiguating
              when a valid user ID is also a valid screen name.
            required: false
            type: number
          - name: screen_name
            description: The screen name of the user for whom to return results. Helpful
              for disambiguating when a valid screen name is also a user ID.
            required: false
            type: string
          - name: count
            description: The amount of results to return per page. Defaults to 20. No
              more than 1000 results will ever be returned in a single page.
            required: false
            type: number
          - name: cursor
            description: |
              Breaks the results into pages. Provide a value of -1 to begin
              paging. Provide values as returned in the response body's next_cursor and
              previous_cursor attributes to page back and forth in the list. It is recommended
              to always use cursors when the method supports them. See Cursoring for more
              information.
            required: false
            type: number
          - name: filter_to_owned_lists
            description: |
              When set to true , t or 1 , will return just lists the authenticating
              user owns, and the user represented by user_id or screen_name is a member
              of.
            required: false
            type: number
        exampleResponse: |
          {
            "next_cursor": 1631626924518660544,
            "next_cursor_str": "1631626924518660544",
            "previous_cursor": 0,
            "previous_cursor_str": "0",
            "lists": [ {list-object} ]
          }
      - title: GET lists/ownerships
        url: https://developer.twitter.com/en/docs/accounts-and-users/create-manage-lists/api-reference/get-lists-ownerships
        resourceUrl: https://api.twitter.com/1.1/lists/ownerships.json
        description: |
          Returns the lists owned by the specified Twitter user. 
          Private lists will only be shown if the authenticated user is also the owner of the lists.
        parameters:
          - name: user_id
            description: |
              The ID of the user for whom to return results. Helpful for disambiguating
              when a valid user ID is also a valid screen name.
            required: false
            type: number
          - name: screen_name
            description: |
              The screen name of the user for whom to return results. Helpful
              for disambiguating when a valid screen name is also a user ID.
            required: false
            type: string
          - name: count
            description: |
              The amount of results to return per page. Defaults to 20. No
              more than 1000 results will ever be returned in a single page.
            required: false
            type: number
          - name: cursor
            description: |
              Breaks the results into pages. Provide a value of -1 to begin
              paging. Provide values as returned in the response body's next_cursor and
              previous_cursor attributes to page back and forth in the list. It is recommended
              to always use cursors when the method supports them. See Cursoring for more
              information.
            required: false
            type: number
        exampleResponse: |
          {
            "next_cursor": 715919216927322112,
            "next_cursor_str": "715919216927322112",
            "previous_cursor": 0,
            "previous_cursor_str": "0",
            "lists": [ {list-object} ]
          }
      - title: GET lists/show
        url: https://developer.twitter.com/en/docs/accounts-and-users/create-manage-lists/api-reference/get-lists-show
        resourceUrl: https://api.twitter.com/1.1/lists/show.json
        description: |
          Returns the specified list. Private lists will only be shown if the authenticated user owns the specified list.
        parameters:
          - name: list_id
            description: The numerical id of the list.
            required: true
            type: number
          - name: slug
            description: You can identify a list by its slug instead of its numerical
              id. If you decide to do so, note that you'll also have to specify the list
              owner using the owner_id or owner_screen_name parameters.
            required: true
            type: string
          - name: owner_screen_name
            description: The screen name of the user who owns the list being requested by a slug.
            required: false
            type: string
          - name: owner_id
            description: The user ID of the user who owns the list being requ by a slug.
            required: false
            type: number
        exampleResponse: |
          {list-object}
      - title: GET lists/statuses
        url: https://developer.twitter.com/en/docs/accounts-and-users/create-manage-lists/api-reference/get-lists-statuses
        resourceUrl: https://api.twitter.com/1.1/lists/statuses.json
        description: |
          Returns a timeline of tweets authored by members of the specified list. 
          Retweets are included by default. Use the include_rts=false parameter to omit retweets.
          Embedded Timelines is a great way to embed list timelines on your website.
        parameters:
          - name: list_id
            description: The numerical id of the list.
            required: true
            type: number
          - name: slug
            description: |
              You can identify a list by its slug instead of its numerical
              id. If you decide to do so, note that you'll also have to specify the list
              owner using the owner_id or owner_screen_name parameters.
            required: true
            type: string
          - name: owner_screen_name
            description: The screen name of the user who owns the list being requested by a slug.
            required: false
            type: string
          - name: owner_id
            description: The user ID of the user who owns the list being requested by a slug.
            required: false
            type: number
          - name: since_id
            description: |
              Returns results with an ID greater than (that is, more recent
              than) the specified ID. There are limits to the number of Tweets which can
              be accessed through the API. If the limit of Tweets has occured since the
              since_id, the since_id will be forced to the oldest ID available.
            required: false
            type: number
          - name: max_id
            description: Returns results with an ID less than (that is, older than) or equal to the specified ID.
            required: false
            type: number
          - name: count
            description: Specifies the number of results to retrieve per "page."
            required: false
            type: number
          - name: include_entities
            description: |
              Entities are ON by default in API 1.1, each tweet includes a
              node called "entities". This node offers a variety of metadata about the
              tweet in a discreet structure, including: user_mentions, urls, and hashtags.
              You can omit entities from the result by using include_entities=false
            required: false
            type: boolean
          - name: include_rts
            description: |
              When set to either true , t or 1 , the list timeline will contain
              native retweets (if they exist) in addition to the standard stream of tweets.
              The output format of retweeted tweets is identical to the representation
              you see in home_timeline.
            required: false
            type: number
        exampleResponse: |
          [ {list-object} ]
      - title: GET lists/subscribers
        url: https://developer.twitter.com/en/docs/accounts-and-users/create-manage-lists/api-reference/get-lists-subscribers
        resourceUrl: https://api.twitter.com/1.1/lists/subscribers.json
        description: |
          subscribers/*
          Returns the subscribers of the specified list. 
          Private list subscribers will only be shown if the authenticated user owns the specified list.
        parameters:
          - name: list_id
            description: The numerical id of the list.
            required: true
            type: number
          - name: slug
            description: |
              You can identify a list by its slug instead of its numerical
              id. If you decide to do so, note that you'll also have to specify the list
              owner using the owner_id or owner_screen_name parameters.
            required: true
            type: string
          - name: owner_screen_name
            description: The screen name of the user who owns the list being requested by a slug.
            required: false
            type: string
          - name: owner_id
            description: The user ID of the user who owns the list being requested by a slug.
            required: false
            type: number
          - name: count
            description: |
              Specifies the number of results to return per page (see cursor
              below). The default is 20, with a maximum of 5,000.
            required: false
            type: number
          - name: cursor
            description: |
              Breaks the results into pages. A single page contains 20 lists.
              Provide a value of -1 to begin paging. Provide values as returned in the
              response body's next_cursor and previous_cursor attributes to page back
              and forth in the list. See Using cursors to navigate collections for more
              information.
            required: false
            type: number
          - name: include_entities
            description: |
              When set to either true , t or 1 , each tweet will include a
              node called "entities". This node offers a variety of metadata about the
              tweet in a discreet structure, including: user_mentions, urls, and hashtags.
              While entities are opt-in on timelines at present, they will be made a default
              component of output in the future. See Tweet Entities for more details.
            required: false
            type: boolean
          - name: skip_status
            description: When set to either true , t or 1 statuses will not be included
              in the returned user objects.
            required: false
            type: boolean
        exampleResponse: |
          {
            "users": [ {user-object} ],
            "next_cursor": 0,
            "next_cursor_str": "0",
            "previous_cursor": 0,
            "previous_cursor_str": "0",
            "total_count": null
          }
      - title: GET lists/subscribers/show
        url: https://developer.twitter.com/en/docs/accounts-and-users/create-manage-lists/api-reference/get-lists-subscribers-show
        resourceUrl: https://api.twitter.com/1.1/lists/subscribers/show.json
        description: |
          Check if the specified user is a subscriber of the specified list. 
          Returns the user if they are a subscriber.
        parameters:
          - name: owner_screen_name
            description: The screen name of the user who owns the list being requested by a slug.
            required: false
            type: string
          - name: owner_id
            description: The user ID of the user who owns the list being requested by a slug.
            required: false
            type: number
          - name: list_id
            description: The numerical id of the list.
            required: true
            type: number
          - name: slug
            description: |
              You can identify a list by its slug instead of its numerical
              id. If you decide to do so, note that you'll also have to specify the list
              owner using the owner_id or owner_screen_name parameters.
            required: true
            type: string
          - name: user_id
            description: |
              The ID of the user for whom to return results. Helpful for disambiguating
              when a valid user ID is also a valid screen name.
            required: true
            type: number
          - name: screen_name
            description: |
              The screen name of the user for whom to return results. Helpful
              for disambiguating when a valid screen name is also a user ID.
            required: true
            type: string
          - name: include_entities
            description: |
              When set to either true, t or 1, each Tweet will include a node
              called "entities". This node offers a variety of metadata about the tweet
              in a discreet structure, including: user_mentions, urls, and hashtags. While
              entities are opt-in on timelines at present, they will be made a default
              component of output in the future. See Tweet Entities for more details.
            required: false
            type: boolean
          - name: skip_status
            description: When set to either true, t or 1 statuses will not be included in the returned user objects.
            required: false
            type: boolean
        exampleResponse: |
          {user-object}
      - title: GET lists/subscriptions
        url: https://developer.twitter.com/en/docs/accounts-and-users/create-manage-lists/api-reference/get-lists-subscriptions
        resourceUrl: https://api.twitter.com/1.1/lists/subscriptions.json
        description: |
          Obtain a collection of the lists the specified user is subscribed to, 
          20 lists per page by default. Does not include the user's own lists.
        parameters:
          - name: user_id
            description: |
              The ID of the user for whom to return results. Helpful for disambiguating
              when a valid user ID is also a valid screen name.
            required: false
            type: number
          - name: screen_name
            description: |
              The screen name of the user for whom to return results. Helpful
              for disambiguating when a valid screen name is also a user ID.
            required: false
            type: string
          - name: count
            description: |
              The amount of results to return per page. Defaults to 20. No
              more than 1000 results will ever be returned in a single page.
            required: false
            type: number
          - name: cursor
            description: |
              Breaks the results into pages. Provide a value of -1 to begin
              paging. Provide values as returned in the response body's next_cursor and
              previous_cursor attributes to page back and forth in the list. It is recommended
              to always use cursors when the method supports them. See Cursoring for more
              information.
            required: false
            type: number
        exampleResponse: |
          {
            "next_cursor": 1631626924518660544,
            "next_cursor_str": "1631626924518660544",
            "previous_cursor": 0,
            "previous_cursor_str": "0",
            "lists": [ {list-object} ]
          }
      - title: POST lists/create
        url: https://developer.twitter.com/en/docs/accounts-and-users/create-manage-lists/api-reference/post-lists-create
        resourceUrl: https://api.twitter.com/1.1/lists/create.json
        description: |
          Creates a new list for the authenticated user. Note that you can create up to 1000 lists per account.
        parameters:
          - name: name
            description: The name for the list. A list's name must start with a letter
              and can consist only of 25 or fewer letters, numbers, "-", or "_" characters.
            required: true
            type: number
          - name: mode
            description: Whether your list is public or private. Values can be public
              or private . If no mode is specified the list will be public.
            required: false
            type: number
          - name: description
            description: The description to give the list.
            required: false
            type: number
        exampleResponse: |
          {list-object}
      - title: POST lists/destroy
        url: https://developer.twitter.com/en/docs/accounts-and-users/create-manage-lists/api-reference/post-lists-destroy
        resourceUrl: https://api.twitter.com/1.1/lists/destroy.json
        description: |
          Deletes the specified list. The authenticated user must own the list to be able to destroy it.
        parameters:
          - name: owner_screen_name
            description: The screen name of the user who owns the list being requested by a slug.
            required: false
            type: string
          - name: owner_id
            description: The user ID of the user who owns the list being requested by a slug.
            required: false
            type: number
          - name: list_id
            description: The numerical id of the list.
            required: true
            type: number
          - name: slug
            description: You can identify a list by its slug instead of its numerical
              id. If you decide to do so, note that you'll also have to specify the list
              owner using the owner_id or owner_screen_name parameters.
            required: true
            type: string
        exampleResponse: |
          {list-object}
      - title: POST lists/members/create
        url: https://developer.twitter.com/en/docs/accounts-and-users/create-manage-lists/api-reference/post-lists-members-create
        resourceUrl: https://api.twitter.com/1.1/lists/members/create.json
        description: |
          Add a member to a list. 
          The authenticated user must own the list to be able to add members to it. 
          Note that lists cannot have more than 5,000 members.
        parameters:
          - name: list_id
            description: The numerical id of the list.
            required: true
            type: number
          - name: slug
            description: |
              You can identify a list by its slug instead of its numerical
              id. If you decide to do so, note that you'll also have to specify the list
              owner using the owner_id or owner_screen_name parameters.
            required: true
            type: string
          - name: user_id
            description: |
              The ID of the user for whom to return results. Helpful for disambiguating
              when a valid user ID is also a valid screen name.
            required: true
            type: number
          - name: screen_name
            description: |
              The screen name of the user for whom to return results. Helpful
              for disambiguating when a valid screen name is also a user ID.
            required: true
            type: string
          - name: owner_screen_name
            description: The screen name of the user who owns the list being requested by a slug.
            required: false
            type: string
          - name: owner_id
            description: The user ID of the user who owns the list being requested by a slug.
            required: false
            type: number
      - title: POST lists/members/create_all
        url: https://developer.twitter.com/en/docs/accounts-and-users/create-manage-lists/api-reference/post-lists-members-create_all
        resourceUrl: https://api.twitter.com/1.1/lists/members/create_all.json
        description: |
          Adds multiple members to a list, by specifying a comma-separated 
          list of member ids or screen names. The authenticated user must own the 
          list to be able to add members to it. Note that lists can't have more 
          than 5,000 members, and you are limited to adding up to 100 members 
          to a list at a time with this method.Please note that there can be 
          issues with lists that rapidly remove and add memberships. Take care when 
          using these methods such that you are not too rapidly switching between 
          removals and adds on the same list.
        parameters:
          - name: list_id
            description: The numerical id of the list.
            required: true
            type: number
          - name: slug
            description: |
              You can identify a list by its slug instead of its numerical
              id. If you decide to do so, note that you'll also have to specify the list
              owner using the owner_id or owner_screen_name parameters.
            required: true
            type: string
          - name: user_id
            description: A comma separated list of user IDs, up to 100 are allowed in a single request.
            required: false
            type: number
          - name: screen_name
            description: A comma separated list of screen names, up to 100 are allowed in a single request.
            required: false
            type: string
          - name: owner_screen_name
            description: The screen name of the user who owns the list being requested by a slug.
            required: false
            type: string
          - name: owner_id
            description: The user ID of the user who owns the list being requested by a slug.
            required: false
            type: number
      - title: POST lists/members/destroy
        url: https://developer.twitter.com/en/docs/accounts-and-users/create-manage-lists/api-reference/post-lists-members-destroy
        resourceUrl: https://api.twitter.com/1.1/lists/members/destroy.json
        description: |
          Removes the specified member from the list. The authenticated user must be the list's owner to remove members from the list.
        parameters:
          - name: list_id
            description: The numerical id of the list.
            required: false
            type: number
          - name: slug
            description: |
              You can identify a list by its slug instead of its numerical
              id. If you decide to do so, note that you'll also have to specify the list
              owner using the owner_id or owner_screen_name parameters.
            required: false
            type: string
          - name: user_id
            description: |
              The ID of the user to remove from the list. Helpful for disambiguating
              when a valid user ID is also a valid screen name.
            required: false
            type: number
          - name: screen_name
            description: |
              The screen name of the user for whom to remove from the list.
              Helpful for disambiguating when a valid screen name is also a user ID.
            required: false
            type: string
          - name: owner_screen_name
            description: The screen name of the user who owns the list being requested by a slug.
            required: false
            type: string
          - name: owner_id
            description: The user ID of the user who owns the list being requested by a slug.
            required: false
            type: number
      - title: POST lists/members/destroy_all
        url: https://developer.twitter.com/en/docs/accounts-and-users/create-manage-lists/api-reference/post-lists-members-destroy_all
        resourceUrl: https://api.twitter.com/1.1/lists/members/destroy_all.json
        description: |
          Removes multiple members from a list, by specifying a comma-separated list 
          of member ids or screen names. The authenticated user must own the list to 
          be able to remove members from it. Note that lists can't have more 
          than 500 members, and you are limited to removing up to 100 members to a 
          list at a time with this method.Please note that there can be issues with 
          lists that rapidly remove and add memberships. Take care when using these methods 
          such that you are not too rapidly switching between removals and adds on the same list.
        parameters:
          - name: list_id
            description: The numerical id of the list.
            required: true
            type: number
          - name: slug
            description: |
              You can identify a list by its slug instead of its numerical
              id. If you decide to do so, note that you'll also have to specify the list
              owner using the owner_id or owner_screen_name parameters.
            required: true
            type: string
          - name: user_id
            description: |
              A comma separated list of user IDs, up to 100 are allowed in
              a single request.
            required: false
            type: number
          - name: screen_name
            description: |
              A comma separated list of screen names, up to 100 are allowed
              in a single request.
            required: false
            type: string
          - name: owner_screen_name
            description: The screen name of the user who owns the list being requested by a slug.
            required: false
            type: string
          - name: owner_id
            description: The user ID of the user who owns the list being requested by a slug.
            required: false
            type: number
      - title: POST lists/subscribers/create
        url: https://developer.twitter.com/en/docs/accounts-and-users/create-manage-lists/api-reference/post-lists-subscribers-create
        resourceUrl: https://api.twitter.com/1.1/lists/subscribers/create.json
        description: Subscribes the authenticated user to the specified list.
        parameters:
          - name: owner_screen_name
            description: The screen name of the user who owns the list being requested by a slug.
            required: false
            type: string
          - name: owner_id
            description: The user ID of the user who owns the list being requested by a slug.
            required: false
            type: number
          - name: list_id
            description: The numerical id of the list.
            required: true
            type: number
          - name: slug
            description: |
              You can identify a list by its slug instead of its numerical
              id. If you decide to do so, note that you'll also have to specify the list
              owner using the owner_id or owner_screen_name parameters.
            required: true
            type: string
        exampleResponse: |
          {list-object}
      - title: POST lists/subscribers/destroy
        url: https://developer.twitter.com/en/docs/accounts-and-users/create-manage-lists/api-reference/post-lists-subscribers-destroy
        resourceUrl: https://api.twitter.com/1.1/lists/subscribers/destroy.json
        description: Unsubscribes the authenticated user from the specified list.
        parameters:
          - name: list_id
            description: The numerical id of the list.
            required: true
            type: number
          - name: slug
            description: You can identify a list by its slug instead of its numerical
              id. If you decide to do so, note that you'll also have to specify the list
              owner using the owner_id or owner_screen_name parameters.
            required: true
            type: string
          - name: owner_screen_name
            description: The screen name of the user who owns the list being requested by a slug.
            required: false
            type: string
          - name: owner_id
            description: The user ID of the user who owns the list being requested by a slug.
            required: false
            type: number
      - title: POST lists/update
        url: https://developer.twitter.com/en/docs/accounts-and-users/create-manage-lists/api-reference/post-lists-update
        resourceUrl: https://api.twitter.com/1.1/lists/update.json
        description: Updates the specified list. The authenticated user must own the list to be able to update it.
        parameters:
          - name: list_id
            description: The numerical id of the list.
            required: true
            type: number
          - name: slug
            description: You can identify a list by its slug instead of its numerical
              id. If you decide to do so, note that you'll also have to specify the list
              owner using the owner_id or owner_screen_name parameters.
            required: true
            type: string
          - name: name
            description: The name for the list.
            required: false
            type: number
          - name: mode
            description: Whether your list is public or private. Values can be public
              or private. If no mode is specified the list will be public.
            required: false
            type: number
          - name: description
            description: The description to give the list.
            required: false
            type: number
          - name: owner_screen_name
            description: The screen name of the user who owns the list being requested by a slug.
            required: false
            type: string
          - name: owner_id
            description: The user ID of the user who owns the list being requested by a slug.
            required: false
            type: number
  - title: Follow, search, and get users
    endpoints:
      - title: GET followers/ids
        url: https://developer.twitter.com/en/docs/accounts-and-users/follow-search-get-users/api-reference/get-followers-ids
        resourceUrl: https://api.twitter.com/1.1/followers/ids.json
        description: |
          Returns a cursored collection of user IDs for every user following the specified user.
          At this time, results are ordered with the most recent following first — however, 
          this ordering is subject to unannounced change and eventual consistency issues. Results are 
          given in groups of 5,000 user IDs and multiple "pages" of results can be navigated through 
          using the next_cursor value in subsequent requests. See Using cursors to navigate 
          collections for more information.This method is especially powerful when used in 
          conjunction with GET users / lookup, a method that allows 
          you to convert user IDs into full user objects in bulk.
        exampleResponse: |
          {
            "ids": [ 455974794 ],
            "next_cursor": 1591087837626119954,
            "next_cursor_str": "1591087837626119954",
            "previous_cursor": 0,
            "previous_cursor_str": "0"
          }
        parameters:
          - name: user_id
            description: The ID of the user for whom to return results.
            required: false
            type: number
          - name: screen_name
            description: The screen name of the user for whom to return results.
            required: false
            type: string
          - name: cursor
            description: |
              Causes the list of connections to be broken into pages of no
              more than 5000 IDs at a time. The number of IDs returned is not guaranteed
              to be 5000 as suspended users are filtered out after connections are queried.
              If no cursor is provided, a value of -1 will be assumed, which is the first
              page.
            required: false
            type: number
          - name: stringify_ids
            description: |
              Some programming environments will not consume Twitter IDs due
              to their size. Provide this option to have IDs returned as strings instead.
            required: false
            type: boolean
          - name: count
            description: |
              Specifies the number of IDs attempt retrieval of, up to a maximum
              of 5,000 per distinct request. The value of count is best thought of as
              a limit to the number of results to return. When using the count parameter
              with this method, it is wise to use a consistent count value across all
              requests to the same user's collection. Usage of this parameter is encouraged
              in environments where all 5,000 IDs constitutes too large of a response.
            required: false
            type: number
      - title: GET followers/list
        url: https://developer.twitter.com/en/docs/accounts-and-users/follow-search-get-users/api-reference/get-followers-list
        resourceUrl: https://api.twitter.com/1.1/followers/list.json
        description: |
          Returns a cursored collection of user objects for users following the specified user.
          At this time, results are ordered with the most recent following first — however, 
          this ordering is subject to unannounced change and eventual consistency issues. 
          Results are given in groups of 20 users and multiple "pages" of results can be 
          navigated through using the next_cursor value in subsequent requests. 
          See Using cursors to navigate collections for more information.
        exampleResponse: |
          {
            "users": [
                {user-object},
                {user-object},
                {user-object}
            ],
            "next_cursor": 1489467234237774933,
            "next_cursor_str": "1489467234237774933",
            "previous_cursor": 0,
            "previous_cursor_str": "0"
          }
        parameters:
          - name: user_id
            description: The ID of the user for whom to return results.
            required: false
            type: number
          - name: screen_name
            description: The screen name of the user for whom to return results.
            required: false
            type: string
          - name: cursor
            description: |
              Causes the list of connections to be broken into pages of no
              more than 5000 IDs at a time. The number of IDs returned is not guaranteed
              to be 5000 as suspended users are filtered out after connections are queried.
              If no cursor is provided, a value of -1 will be assumed, which is the first
              page.
            required: false
            type: number
          - name: count
            description: |
              Specifies the number of IDs attempt retrieval of, up to a maximum
              of 5,000 per distinct request. The value of count is best thought of as
              a limit to the number of results to return. When using the count parameter
              with this method, it is wise to use a consistent count value across all
              requests to the same user's collection. Usage of this parameter is encouraged
              in environments where all 5,000 IDs constitutes too large of a response.
            required: false
            type: number
          - name: skip_status
            description: |
              When set to either true, t or 1, statuses will not be included
              in the returned user objects. If set to any other value, statuses will be
              included.
            required: false
            type: boolean
          - name: include_user_entities
            description: The user object entities node will not be included when set to false.
            required: false
            type: boolean
      - title: GET friends/ids
        url: https://developer.twitter.com/en/docs/accounts-and-users/follow-search-get-users/api-reference/get-friends-ids
        resourceUrl: https://api.twitter.com/1.1/friends/ids.json
        description: |
          Returns a cursored collection of user IDs for every user the specified 
          user is following (otherwise known as their "friends").At this time, results 
          are ordered with the most recent following first — however, this ordering 
          is subject to unannounced change and eventual consistency issues. 
          Results are given in groups of 5,000 user IDs and multiple "pages" 
          of results can be navigated through using the next_cursor value in subsequent requests. 
          See Using cursors to navigate collections for more information.This method is 
          especially powerful when used in conjunction with GET users / lookup, a method 
          that allows you to convert user IDs into full user objects in bulk.
        exampleResponse: |
          {
            "previous_cursor": 0,
            "ids": [657693 ],
            "previous_cursor_str": "0",
            "next_cursor": 0,
            "next_cursor_str": "0"
          }
        parameters:
          - name: user_id
            description: The ID of the user for whom to return results.
            required: false
            type: number
          - name: screen_name
            description: The screen name of the user for whom to return results.
            required: false
            type: string
          - name: cursor
            description: |
              Causes the list of connections to be broken into pages of no
              more than 5000 IDs at a time. The number of IDs returned is not guaranteed
              to be 5000 as suspended users are filtered out after connections are queried.
              If no cursor is provided, a value of -1 will be assumed, which is the first
              page.
            required: false
            type: number
          - name: stringify_ids
            description: |
              Some programming environments will not consume Twitter IDs due
              to their size. Provide this option to have IDs returned as strings instead.
            required: false
            type: boolean
          - name: count
            description: |
              Specifies the number of IDs attempt retrieval of, up to a maximum
              of 5,000 per distinct request. The value of count is best thought of as
              a limit to the number of results to return. When using the count parameter
              with this method, it is wise to use a consistent count value across all
              requests to the same user's collection. Usage of this parameter is encouraged
              in environments where all 5,000 IDs constitutes too large of a response.
            required: false
            type: number
      - title: GET friends/list
        url: https://developer.twitter.com/en/docs/accounts-and-users/follow-search-get-users/api-reference/get-friends-list
        resourceUrl: https://api.twitter.com/1.1/friends/list.json
        description: |
          Returns a cursored collection of user objects for every user the 
          specified user is following (otherwise known as their "friends").At this time, 
          results are ordered with the most recent following first — however, this 
          ordering is subject to unannounced change and eventual consistency issues. 
          Results are given in groups of 20 users and multiple "pages" of results can 
          be navigated through using the next_cursor value in subsequent requests. 
          See Using cursors to navigate collections for more information.
        exampleResponse: |
          {
          "users": [
              {user-object},
              {user-object},
              {user-object}
            ],
            "previous_cursor": 0,
            "previous_cursor_str": "0",
            "next_cursor": 1333504313713126852,
            "next_cursor_str": "1333504313713126852"
          }
        parameters:
          - name: user_id
            description: The ID of the user for whom to return results.
            required: false
            type: number
          - name: screen_name
            description: The screen name of the user for whom to return results.
            required: false
            type: string
          - name: cursor
            description: |
              Causes the list of connections to be broken into pages of no
              more than 5000 IDs at a time. The number of IDs returned is not guaranteed
              to be 5000 as suspended users are filtered out after connections are queried.
              If no cursor is provided, a value of -1 will be assumed, which is the first
              page.
            required: false
            type: number
          - name: count
            description: |
              Specifies the number of IDs attempt retrieval of, up to a maximum
              of 5,000 per distinct request. The value of count is best thought of as
              a limit to the number of results to return. When using the count parameter
              with this method, it is wise to use a consistent count value across all
              requests to the same user's collection. Usage of this parameter is encouraged
              in environments where all 5,000 IDs constitutes too large of a response.
            required: false
            type: number
          - name: skip_status
            description: |
              When set to either true, t or 1, statuses will not be included
              in the returned user objects. If set to any other value, statuses will be
              included.
            required: false
            type: boolean
          - name: include_user_entities
            description: The user object entities node will not be included when set to false.
            required: false
            type: boolean
      - title: GET friendships/incoming
        url: https://developer.twitter.com/en/docs/accounts-and-users/follow-search-get-users/api-reference/get-friendships-incoming
        resourceUrl: https://api.twitter.com/1.1/friendships/incoming.json
        description: |
          Returns a collection of numeric IDs for every user who has a pending request to follow the authenticating user.
        exampleResponse: |
          {
            "previous_cursor": 0,
            "ids": [6253282],
            "previous_cursor_str": "0",
            "next_cursor": 0,
            "next_cursor_str": "0"
          }
        parameters:
          - name: cursor
            description: |
              Causes the list of connections to be broken into pages of no
              more than 5000 IDs at a time. The number of IDs returned is not guaranteed
              to be 5000 as suspended users are filtered out after connections are queried.
              If no cursor is provided, a value of -1 will be assumed, which is the first
              page.
            required: false
            type: number
      - title: GET friendships/lookup
        url: https://developer.twitter.com/en/docs/accounts-and-users/follow-search-get-users/api-reference/get-friendships-lookup
        resourceUrl: https://api.twitter.com/1.1/friendships/lookup.json
        description: |
          Returns the relationships of the authenticating user to the comma-separated 
          list of up to 100 screen_names or user_ids provided. Values for connections can be: 
          following, following_requested, followed_by, none, blocking, muting.
        parameters:
          - name: cursor
            description: |
              Causes the list of connections to be broken into pages of no
              more than 5000 IDs at a time. The number of IDs returned is not guaranteed
              to be 5000 as suspended users are filtered out after connections are queried.
              If no cursor is provided, a value of -1 will be assumed, which is the first
              page.
            required: false
            type: number
          - name: stringify_ids
            description: Some programming environments will not consume Twitter IDs due
              to their size. Provide this option to have IDs returned as strings instead.
            required: false
            type: boolean
        exampleResponse: |
          [
            {
              "name": "Twitter Dev",
              "screen_name": "TwitterDev",
              "id": 2244994945,
              "id_str": "2244994945",
              "connections": ["following"]
            }
          ]
      - title: GET friendships/no_retweets/ids
        url: https://developer.twitter.com/en/docs/accounts-and-users/follow-search-get-users/api-reference/get-friendships-no_retweets-ids
        resourceUrl: https://api.twitter.com/1.1/friendships/no_retweets/ids.json
        description: |
          Returns a collection of user_ids that the currently authenticated user does 
          not want to receive retweets from.Use POST friendships / update to set the 
          "no retweets" status for a given user account on behalf of the current user.
        parameters:
          - name: stringify_ids
            description: |
              Some programming environments will not consume Twitter IDs due
              to their size. Provide this option to have IDs returned as strings instead.
              Read more about Twitter IDs. This parameter is important to use in Javascript
              environments.
            required: false
            type: boolean
      - title: GET friendships/outgoing
        url: https://developer.twitter.com/en/docs/accounts-and-users/follow-search-get-users/api-reference/get-friendships-outgoing
        resourceUrl: https://api.twitter.com/1.1/friendships/outgoing.format
        description: |
          Returns a collection of numeric IDs for every protected user for 
          whom the authenticating user has a pending follow request.
        exampleResponse: |
          {
            "previous_cursor": 0,
            "ids": [ 51937528 ],
            "previous_cursor_str": "0",
            "next_cursor": 0,
            "next_cursor_str": "0"
          }
        parameters:
          - name: cursor
            description: |
              Causes the list of connections to be broken into pages of no more than 5000 IDs at a time. 
              The number of IDs returned is not guaranteed to be 5000 as suspended users are filtered out 
              after connections are queried. If no cursor is provided, a value of -1 will be assumed, which is the first "page."
              The response from the API will include a previous_cursor and next_cursor to allow paging 
              back and forth. See Using cursors to navigate collections for more information.
            required: false
            type: number
          - name: stringify_ids
            description: |
              Some programming environments will not consume Twitter IDs due to their size.
              Provide this option to have IDs returned as strings instead. More about Twitter IDs.
            required: false
            type: boolean
      - title: GET friendships/show
        url: https://developer.twitter.com/en/docs/accounts-and-users/follow-search-get-users/api-reference/get-friendships-show
        resourceUrl: https://api.twitter.com/1.1/friendships/show.json
        description: Returns detailed information about the relationship between two arbitrary users.
        parameters:
          - name: source_id
            description: The user_id of the subject user.
            required: false
            type: number
          - name: source_screen_name
            description: The screen_name of the subject user.
            required: false
            type: string
          - name: target_id
            description: The user_id of the target user.
            required: false
            type: number
          - name: target_screen_name
            description: The screen_name of the target user.
            required: false
            type: string
        exampleResponse: |
          {
            "relationship": {
              "source": {
                "id": 783214,
                "id_str": "783214",
                "screen_name": "Twitter",
                "following": true,
                "followed_by": true,
                "live_following": false,
                "following_received": null,
                "following_requested": null,
                "notifications_enabled": null,
                "can_dm": true,
                "blocking": null,
                "blocked_by": null,
                "muting": null,
                "want_retweets": null,
                "all_replies": null,
                "marked_spam": null
              },
              "target": {
                "id": 2244994945,
                "id_str": "2244994945",
                "screen_name": "TwitterDev",
                "following": true,
                "followed_by": true,
                "following_received": null,
                "following_requested": null
              }
            }
          }
      - title: GET users/lookup
        url: https://developer.twitter.com/en/docs/accounts-and-users/follow-search-get-users/api-reference/get-users-lookup
        resourceUrl: https://api.twitter.com/1.1/users/lookup.json
        description: |
          Returns fully-hydrated user objects for up to 100 users per request, as specified by comma-separated values passed to the user_id and/or screen_name parameters.This method is especially useful when used in conjunction with collections of user IDs returned from GET friends / ids and GET followers / ids.GET users / show is used to retrieve a single user object.There are a few things to note when using this method.
          You must be following a protected user to be able to see their most recent status update. If you don't follow a protected user their status will be removed.
          The order of user IDs or screen names may not match the order of users in the returned array.
          If a requested user is unknown, suspended, or deleted, then that user will not be returned in the results list.
          If none of your lookup criteria can be satisfied by returning a user object, a HTTP 404 will be thrown.
          You are strongly encouraged to use a POST for larger requests.
        parameters:
          - name: screen_name
            description: |
              A comma separated list of screen names, up to 100 are allowed
              in a single request. You are strongly encouraged to use a POST for larger
              (up to 100 screen names) requests.
            required: false
            type: string
          - name: user_id
            description: |
              A comma separated list of user IDs, up to 100 are allowed in
              a single request. You are strongly encouraged to use a POST for larger requests.
            required: false
            type: string
          - name: include_entities
            description: The entities node that may appear within embedded statuses will
              not be included when set to false.
            required: false
            type: boolean
          - name: tweet_mode
            description: Valid request values are compat and extended, which give compatibility
              mode and extended mode, respectively for Tweets that contain over 140 characters
            required: false
            type: boolean
        exampleResponse: |
          [ {user-object} ]
      - title: GET users/search
        url: https://developer.twitter.com/en/docs/accounts-and-users/follow-search-get-users/api-reference/get-users-search
        resourceUrl: https://api.twitter.com/1.1/users/search.json
        description: |
          Provides a simple, relevance-based search interface 
          to public user accounts on Twitter. Try querying by topical interest, 
          full name, company name, location, or other criteria. Exact match searches 
          are not supported.Only the first 1,000 matching results are available.
        parameters:
          - name: q
            description: The search query to run against people search.
            required: true
            type: string
          - name: page
            description: Specifies the page of results to retrieve.
            required: false
            type: number
          - name: count
            description: The number of potential user results to retrieve per page. This value has a maximum of 20.
            required: false
            type: number
          - name: include_entities
            description: The entities node will not be included in embedded Tweet objects when set to false .
            required: false
            type: boolean
        exampleResponse: |
          [ {user-object} ]
      - title: GET users/show
        url: https://developer.twitter.com/en/docs/accounts-and-users/follow-search-get-users/api-reference/get-users-show
        resourceUrl: https://api.twitter.com/1.1/users/show.json
        description: |
          Returns a variety of information about the user specified by 
          the required user_id or screen_name parameter. 
          The author's most recent Tweet will be returned inline when possible.GET users / lookup 
          is used to retrieve a bulk collection of user objects.You must be following a 
          protected user to be able to see their most recent Tweet. If you don't follow a 
          protected user, the user's Tweet will be removed. A Tweet will not always be 
          returned in the current_status field.
        parameters:
          - name: user_id
            description: |
              The ID of the user for whom to return results. Either an id or
              screen_name is required for this method.
            required: false
            type: number
          - name: screen_name
            description: |
              The screen name of the user for whom to return results. Either
              a id or screen_name is required for this method.
            required: false
            type: string
          - name: include_entities
            description: The entities node will not be included when set to false.
            required: false
            type: boolean
        exampleResponse: |
          {user-object}
      - title: POST friendships/create
        url: https://developer.twitter.com/en/docs/accounts-and-users/follow-search-get-users/api-reference/post-friendships-create
        resourceUrl: https://api.twitter.com/1.1/friendships/create.json
        description: |
          Allows the authenticating user to follow (friend) the user 
          specified in the ID parameter.Returns the followed user when successful. 
          Returns a string describing the failure condition when unsuccessful. 
          If the user is already friends with the user a HTTP 403 may be returned, 
          though for performance reasons this method may also return a HTTP 200 OK 
          message even if the follow relationship already exists.Actions taken in 
          this method are asynchronous. Changes will be eventually consistent.
        parameters:
          - name: screen_name
            description: The screen name of the user to follow.
            required: false
            type: string
          - name: user_id
            description: The ID of the user to follow.
            required: false
            type: number
          - name: follow
            description: Enable notifications for the target user.
            required: false
            type: boolean
        exampleResponse: |
          {user-object}
      - title: POST friendships/destroy
        url: https://developer.twitter.com/en/docs/accounts-and-users/follow-search-get-users/api-reference/post-friendships-destroy
        resourceUrl: https://api.twitter.com/1.1/friendships/destroy.json
        description: |
          Allows the authenticating user to unfollow the user specified 
          in the ID parameter. Returns the unfollowed user when successful. 
          Returns a string describing the failure condition when unsuccessful.
          Actions taken in this method are asynchronous. 
          Changes will be eventually consistent.
        parameters:
          - name: screen_name
            description: The screen name of the user to unfollow.
            required: false
            type: string
          - name: user_id
            description: The ID of the user to unfollow.
            required: false
            type: number
        exampleResponse: |
          {user-object}
      - title: POST friendships/update
        url: https://developer.twitter.com/en/docs/accounts-and-users/follow-search-get-users/api-reference/post-friendships-update
        resourceUrl: https://api.twitter.com/1.1/friendships/update.json
        description: Enable or disable Retweets and device notifications from the specified user.
        parameters:
          - name: screen_name
            description: The screen name of the user being followed.
            required: false
            type: string
          - name: user_id
            description: The ID of the user being followed.
            required: false
            type: number
          - name: device
            description: Enable/disable device notifications from the target user.
            required: false
            type: boolean
          - name: retweets
            description: Enable/disable Retweets from the target user.
            required: false
            type: boolean
        exampleResponse: |
          {
            "relationship": {
              "source": {
                "id": 63046977,
                "id_str": "63046977",
                "screen_name": "happycamper",
                "following": true,
                "followed_by": false,
                "live_following": false,
                "following_received": null,
                "following_requested": false,
                "notifications_enabled": false,
                "can_dm": false,
                "blocking": false,
                "blocked_by": false,
                "muting": false,
                "want_retweets": true,
                "all_replies": false,
                "marked_spam": false
              },
              "target": {
                "id": 2244994945,
                "id_str": "2244994945",
                "screen_name": "TwitterDev",
                "following": false,
                "followed_by": true,
                "following_received": false,
                "following_requested": null
              }
            }
          }
  - title: Manage account settings and profile
    endpoints:
      - title: GET account/settings
        url: https://developer.twitter.com/en/docs/accounts-and-users/manage-account-settings/api-reference/get-account-settings
        resourceUrl: https://api.twitter.com/1.1/account/settings.json
        description: |
          Returns settings (including current trend, geo and sleep time information) for the authenticating user.
        exampleResponse: |
          {
            "always_use_https": true,
            "discoverable_by_email": true,
            "geo_enabled": true,
            "language": "en",
            "protected": false,
            "screen_name": "theSeanCook",
            "show_all_inline_media": false,
            "sleep_time": {
              "enabled": false,
              "end_time": null,
              "start_time": null
            },
            "time_zone": {
              "name": "Pacific Time (US & Canada)",
              "tzinfo_name": "America/Los_Angeles",
              "utc_offset": -28800
            },
            "trend_location": [
              {
                "country": "United States",
                "countryCode": "US",
                "name": "Atlanta",
                "parentid": 23424977,
                "placeType": {
                    "code": 7,
                    "name": "Town"
                },
                "url": "http://where.yahooapis.com/v1/place/2357024",
                "woeid": 2357024
              }
            ],
            "use_cookie_personalization": true,
            "allow_contributor_request": "all"
          }

      - title: GET account/verify_credentials
        url: https://developer.twitter.com/en/docs/twitter-api/v1/accounts-and-users/manage-account-settings/api-reference/get-account-verify_credentials
        resourceUrl: https://api.twitter.com/1.1/account/verify_credentials.json
        description: |
          Returns an HTTP 200 OK response code and a representation of the requesting user if authentication was successful;
          returns a 401 status code and an error message if not. Use this method to test if supplied user credentials are valid.
        parameters:
          - name: include_entities
            description: The entities node will not be included when set to false.
            required: false
            type: boolean
          - name: skip_status
            description: When set to either true , t or 1 statuses will not be included in the returned user object.
            required: false
            type: boolean
          - name: include_email
            description: When set to true email will be returned in the user objects as a string. If the user does not have an email address on their account, or if the email address is not verified, null will be returned.
            required: false
            type: boolean
        exampleResponse: |
          {user-object}

      - title: GET saved_searches/list
        url: https://developer.twitter.com/en/docs/accounts-and-users/manage-account-settings/api-reference/get-saved_searches-list
        resourceUrl: https://api.twitter.com/1.1/saved_searches/list.json
        description: |
          Returns the authenticated user's saved search queries.
        exampleResponse: |
          [
            {
              "created_at": "Tue Jun 15 09:37:24 +0000 2010",
              "id": 9569704,
              "id_str": "9569704",
              "name": "@twitterapi",
              "position": null,
              "query": "@twitterapi"
            },
            {
              "created_at": "Tue Jun 15 09:38:04 +0000 2010",
              "id": 9569730,
              "id_str": "9569730",
              "name": "@twitter OR twitterapi OR 'twitter api' OR '@anywhere'",
              "position": null,
              "query": "@twitter OR twitterapi OR 'twitter api' OR '@anywhere'"
            }
          ]
      - title: GET saved_searches/show/:id
        url: https://developer.twitter.com/en/docs/accounts-and-users/manage-account-settings/api-reference/get-saved_searches-show-id
        resourceUrl: https://api.twitter.com/1.1/saved_searches/show/:id.json
        description: |
          Retrieve the information for the saved search represented by the given id. The authenticating user must be the owner of saved search ID being requested.
        parameters:
          - name: id
            description: The ID of the saved search.
            required: true
            type: number
        exampleResponse: |
          {
            "created_at": "Fri Nov 04 18:46:41 +0000 2011",
            "id": 62353170,
            "id_str": "62353170",
            "name": "@anywhere",
            "position": null,
            "query": "@anywhere"
          }
      - title: GET users/profile_banner
        url: https://developer.twitter.com/en/docs/accounts-and-users/manage-account-settings/api-reference/get-users-profile_banner
        resourceUrl: https://api.twitter.com/1.1/users/profile_banner.json
        description: |
          Returns a map of the available size variations of the specified user's profile banner.
          If the user has not uploaded a profile banner, a HTTP 404 will be served instead.
          This method can be used instead of string manipulation on the profile_banner_url
          returned in user objects as described in Profile Images and Banners.
          The profile banner data available at each size variant's URL is in PNG format.
        parameters:
          - name: user_id
            description: |
              The ID of the user for whom to return results. Helpful for disambiguating
              when a valid user ID is also a valid screen name.
            required: false
            type: number
          - name: screen_name
            description: |
              The screen name of the user for whom to return results. Helpful
              for disambiguating when a valid screen name is also a user ID.
            required: false
            type: string
        exampleResponse: |
          {size-object}
      - title: POST account/remove_profile_banner
        url: https://developer.twitter.com/en/docs/accounts-and-users/manage-account-settings/api-reference/post-account-remove_profile_banner
        resourceUrl: https://api.twitter.com/1.1/account/remove_profile_banner.json
        description: |
          Removes the uploaded profile banner for the authenticating user. Returns HTTP 200 upon success.
      - title: POST account/update_profile
        url: https://developer.twitter.com/en/docs/accounts-and-users/manage-account-settings/api-reference/post-account-update_profile
        resourceUrl: https://api.twitter.com/1.1/account/update_profile.json
        description: |
          Sets some values that users are able to set under the "Account" 
          tab of their settings page. Only the parameters specified will be updated.
        parameters:
          - name: name
            description: Full name associated with the profile.
            required: false
            type: string
          - name: url
            description: URL associated with the profile. Will be prepended with http:// if not present.
            required: false
            type: string
          - name: location
            description: |
              The city or country describing where the user of the account
              is located. The contents are not normalized or geocoded in any way.
            required: false
            type: string
          - name: description
            description: A description of the user owning the account.
            required: false
            type: string
          - name: include_entities
            description: The entities node will not be included when set to false .
            required: false
            type: boolean
          - name: skip_status
            description: |
              When set to either true , t or 1 statuses will not be included
              in the returned user object.
            required: false
            type: boolean
        exampleResponse: |
          {user-object}
      - title: POST account/update_profile_background_image (retired)
        url: https://developer.twitter.com/en/docs/accounts-and-users/manage-account-settings/api-reference/post-account-update_profile_background_image
        resourceUrl: https://api.twitter.com/1.1/account/update_profile_background_image.json
        description: |
          Updates the authenticating user's profile background image. 
          This method can also be used to enable or disable the profile 
          background image.Although each parameter is marked as optional, at least one of 
          image or media_id must be provided when making this request.Learn more about the 
          deprecation of this endpoint via our forum post.
        parameters:
          - name: image
            description: |
              The background image for the profile, base64-encoded. Must be
              a valid GIF, JPG, or PNG image of less than 800 kilobytes in size. Images
              with width larger than 2048 pixels will be forcibly scaled down. The image
              must be provided as raw multipart data, not a URL.
            required: false
            type: number
          - name: tile
            description: |
              Whether or not to tile the background image. If set to true ,
              t or 1 the background image will be displayed tiled. The image will not
              be tiled otherwise.
            required: false
            type: number
          - name: include_entities
            description: The entities node will not be included when set to false .
            required: false
            type: boolean
          - name: skip_status
            description: When set to either true, t or 1 statuses will not be included in the returned user objects.
            required: false
            type: boolean
          - name: media_id
            description: Specify the media to use as the background image. More information on upload of media is available here .
            required: false
            type: number
      - title: POST account/update_profile_banner
        url: https://developer.twitter.com/en/docs/accounts-and-users/manage-account-settings/api-reference/post-account-update_profile_banner
        resourceUrl: https://api.twitter.com/1.1/account/update_profile_banner.json
        description: |
          Uploads a profile banner on behalf of the authenticating user. More information about sizing variations can be found in User Profile Images and Banners and GET users / profile_banner.Profile banner images are processed asynchronously. The profile_banner_url and its variant sizes will not necessary be available directly after upload.
        parameters:
          - name: banner
            description: The Base64-encoded or raw image data being uploaded as the user's new profile banner.
            required: true
            type: number
          - name: width
            description: |
              The width of the preferred section of the image being uploaded
              in pixels. Use with height , offset_left , and offset_top to select the
              desired region of the image to use.
            required: false
            type: number
          - name: height
            description: |
              The height of the preferred section of the image being uploaded
              in pixels. Use with width , offset_left , and offset_top to select the desired
              region of the image to use.
            required: false
            type: number
          - name: offset_left
            description: |
              The number of pixels by which to offset the uploaded image from
              the left. Use with height , width , and offset_top to select the desired
              region of the image to use.
            required: false
            type: number
          - name: offset_top
            description: |
              The number of pixels by which to offset the uploaded image from
              the top. Use with height , width , and offset_left to select the desired
              region of the image to use.
            required: false
            type: number
      - title: POST account/update_profile_image
        url: https://developer.twitter.com/en/docs/accounts-and-users/manage-account-settings/api-reference/post-account-update_profile_image
        resourceUrl: https://api.twitter.com/1.1/account/update_profile_image.json
        description: |
          Updates the authenticating user's profile image. 
          Note that this method expects raw multipart data, not a URL to an image.
          This method asynchronously processes the uploaded file before updating the 
          user's profile image URL. You can either update your local cache the next 
          time you request the user's information, or, at least 5 seconds after 
          uploading the image, ask for the updated URL using GET users / show.
        parameters:
          - name: image
            description: |
              The avatar image for the profile, base64-encoded. Must be a valid
              GIF, JPG, or PNG image of less than 700 kilobytes in size. Images with width
              larger than 400 pixels will be scaled down. Animated GIFs will be converted
              to a static GIF of the first frame, removing the animation.
            required: true
            type: number
          - name: include_entities
            description: The entities node will not be included when set to false .
            required: false
            type: boolean
          - name: skip_status
            description: |
              When set to either true, t or 1 statuses will not be included
              in the returned user objects.
            required: false
            type: boolean
        exampleResponse: |
          {user-object}
      - title: POST saved_searches/create
        url: https://developer.twitter.com/en/docs/accounts-and-users/manage-account-settings/api-reference/post-saved_searches-create
        resourceUrl: https://api.twitter.com/1.1/saved_searches/create.json
        description: |
          Create a new saved search for the authenticated user. A user may only have 25 saved searches.
        parameters:
          - name: query
            description: The query of the search the user would like to save.
            required: true
            type: number
        exampleResponse: |
          {
            "created_at": "Fri Nov 04 18:46:41 +0000 2011",
            "id": 62353170,
            "id_str": "62353170",
            "name": "@anywhere",
            "position": null,
            "query": "@anywhere"
          }
      - title: POST saved_searches/destroy/:id
        url: https://developer.twitter.com/en/docs/accounts-and-users/manage-account-settings/api-reference/post-saved_searches-destroy-id
        resourceUrl: https://api.twitter.com/1.1/saved_searches/destroy/:id.json
        description: |
          Destroys a saved search for the authenticating user. The authenticating user must be the owner of saved search id being destroyed.
        parameters:
          - name: id
            description: The ID of the saved search.
            required: true
            type: number
        exampleResponse: |
          {
            "created_at": "Fri Nov 04 18:46:41 +0000 2011",
            "id": 62353170,
            "id_str": "62353170",
            "name": "@anywhere",
            "position": null,
            "query": "@anywhere"
          }
  - title: Mute, block, and report users
    endpoints:
      - title: GET blocks/ids
        url: https://developer.twitter.com/en/docs/accounts-and-users/mute-block-report-users/api-reference/get-blocks-ids
        resourceUrl: https://api.twitter.com/1.1/blocks/ids.json
        description: |
          Returns an array of numeric user ids the authenticating user is blocking.
          Important This method is cursored, meaning your app must make 
          multiple requests in order to receive all blocks correctly. See Using cursors to navigate 
          collections for more details on how cursoring works.
        exampleResponse: |
          {
            "ids": [ "123" ],
            "next_cursor": 0,
            "next_cursor_str": "0",
            "previous_cursor": 0,
            "previous_cursor_str": "0"
          }
      - title: GET blocks/list
        url: https://developer.twitter.com/en/docs/accounts-and-users/mute-block-report-users/api-reference/get-blocks-list
        resourceUrl: https://api.twitter.com/1.1/blocks/list.json
        description: |
          Returns a collection of user objects that the authenticating user is blocking.
          Important This method is cursored, meaning your app must make multiple 
          requests in order to receive all blocks correctly. See Using cursors to 
          navigate collections for more details on how cursoring works.
        exampleResponse: |
          {
            "users": [ {user-object} ],
            "next_cursor": 0,
            "next_cursor_str": "0",
            "previous_cursor": 0,
            "previous_cursor_str": "0",
            "total_count": null
          }
      - title: GET mutes/users/ids
        url: https://developer.twitter.com/en/docs/accounts-and-users/mute-block-report-users/api-reference/get-mutes-users-ids
        resourceUrl: https://api.twitter.com/1.1/mutes/users/ids.json
        description: |
          Returns an array of numeric user ids the authenticating user has muted.
        exampleResponse: |
          {
            "ids": [ 1228026486 ],
            "next_cursor": 0,
            "next_cursor_str": "0",
            "previous_cursor": 0,
            "previous_cursor_str": "0"
          }
      - title: GET mutes/users/list
        url: https://developer.twitter.com/en/docs/accounts-and-users/mute-block-report-users/api-reference/get-mutes-users-list
        resourceUrl: https://api.twitter.com/1.1/mutes/users/list.json
        description: |
          Returns an array of user objects the authenticating user has muted.
        exampleResponse: |
          {
            "users": [ {user-object} ],
            "next_cursor": 0,
            "next_cursor_str": "0",
            "previous_cursor": 0,
            "previous_cursor_str": "0",
            "total_count": null
          }
      - title: POST blocks/create
        url: https://developer.twitter.com/en/docs/accounts-and-users/mute-block-report-users/api-reference/post-blocks-create
        resourceUrl: https://api.twitter.com/1.1/blocks/create.json
        description: |
          Blocks the specified user from following the authenticating user. 
          In addition the blocked user will not show in the authenticating users mentions 
          or timeline (unless retweeted by another user). If a follow or friend 
          relationship exists it is destroyed.The URL pattern 
          /version/block/create/:screen_name_or_user_id.format is still accepted but not 
          recommended. As a sequence of numbers is a valid screen name we recommend using 
          the screen_name or user_id parameter instead.
        parameters:
          - name: screen_name
            description: |
              The screen name of the potentially blocked user. Helpful for
              disambiguating when a valid screen name is also a user ID.
            required: false
            type: string
          - name: user_id
            description: |
              The ID of the potentially blocked user. Helpful for disambiguating
              when a valid user ID is also a valid screen name.
            required: false
            type: number
          - name: include_entities
            description: The entities node will not be included when set to false .
            required: false
            type: boolean
          - name: skip_status
            description: |
              When set to either true , t or 1 statuses will not be included in the returned user objects.
            required: false
            type: boolean
        exampleResponse: |
          {user-object}
      - title: POST blocks/destroy
        url: https://developer.twitter.com/en/docs/twitter-api/v1/accounts-and-users/mute-block-report-users/api-reference/post-blocks-destroy
        resourceUrl: https://api.twitter.com/1.1/blocks/destroy.json
        description: |
          Un-blocks the user specified in the ID parameter for the authenticating user.
          Returns the un-blocked user when successful. If relationships existed before
          the block was instantiated, they will not be restored.
        parameters:
          - name: screen_name
            description: |
              The screen name of the potentially blocked user. Helpful for
              disambiguating when a valid screen name is also a user ID.
            required: false
            type: string
          - name: user_id
            description: |
              The ID of the potentially blocked user. Helpful for disambiguating
              when a valid user ID is also a valid screen name.
            required: false
            type: number
          - name: include_entities
            description: The entities node will not be included when set to false .
            required: false
            type: boolean
          - name: skip_status
            description: |
              When set to either true , t or 1 statuses will not be included in the returned user objects.
            required: false
            type: boolean
        exampleResponse: |
          {user-object}
      - title: POST mutes/users/create
        url: https://developer.twitter.com/en/docs/accounts-and-users/mute-block-report-users/api-reference/post-mutes-users-create
        resourceUrl: https://api.twitter.com/1.1/mutes/users/create.json
        description: |
          Mutes the user specified in the ID parameter for the authenticating user.
          Returns the muted user when successful. Returns a string describing the 
          failure condition when unsuccessful.Actions taken in this method are asynchronous. 
          Changes will be eventually consistent.
        parameters:
          - name: screen_name
            description: |
              The screen name of the potentially muted user. Helpful for disambiguating
              when a valid screen name is also a user ID.
            required: false
            type: string
          - name: user_id
            description: |
              The ID of the potentially muted user. Helpful for disambiguating
              when a valid user ID is also a valid screen name.
            required: false
            type: number
        exampleResponse: |
          {user-object}
      - title: POST mutes/users/destroy
        url: https://developer.twitter.com/en/docs/accounts-and-users/mute-block-report-users/api-reference/post-mutes-users-destroy
        resourceUrl: https://api.twitter.com/1.1/mutes/users/destroy.json
        description: |
          Un-mutes the user specified in the ID parameter for the authenticating user.
          Returns the unmuted user when successful. Returns a string describing the 
          failure condition when unsuccessful.Actions taken in this method are asynchronous. 
          Changes will be eventually consistent.
        parameters:
          - name: screen_name
            description: |
              The screen name of the potentially muted user. Helpful for disambiguating
              when a valid screen name is also a user ID.
            required: false
            type: string
          - name: user_id
            description: |
              The ID of the potentially muted user. Helpful for disambiguating
              when a valid user ID is also a valid screen name.
            required: false
            type: number
        exampleResponse: |
          {user-object}
      - title: POST users/report_spam
        url: https://developer.twitter.com/en/docs/accounts-and-users/mute-block-report-users/api-reference/post-users-report_spam
        resourceUrl: https://api.twitter.com/1.1/users/report_spam.json
        description: |
          Report the specified user as a spam account to Twitter. 
          Additionally, optionally performs the equivalent of POST blocks / create 
          on behalf of the authenticated user.
        parameters:
          - name: screen_name
            description: |
              The screen_name of the user to report as a spammer. Helpful for
              disambiguating when a valid screen name is also a user ID.
            required: false
            type: string
          - name: user_id
            description: |
              The ID of the user to report as a spammer. Helpful for disambiguating
              when a valid user ID is also a valid screen name.
            required: false
            type: number
          - name: perform_block
            description: |
              Whether the account should be blocked by the authenticated user,
              as well as being reported for spam.
            required: false
            type: boolean
        exampleResponse: |
          {user-object}
